- name: dataset module test playbook
  hosts: localhost
  gather_facts: no
  vars:
    username: root
    # Fill this with a password or use the ANSIBLE_BRICKSTOR_PASSWORD
    # environment variable instead.
    password: "{{ lookup('env','ANSIBLE_BRICKSTOR_PASSWORD') }}"
    host: 10.2.22.87

  tasks:
  - name: Create dataset p01/global/a
    dataset:
      ds_path: p01/global/a
      username: "{{ username }}"
      password: "{{ password }}"
      host: "{{ host }}"
      state: present
      atime: on
      quota: 3M
      # Uncomment next two properties to trigger a failure.
      # refquota: 4M
      # refreservation: 4M
      # reservation: 3M
      # refquota: 3M
      # refreservation: 3M
    register: testout1

  - name: Create dataset p01/global/b
    dataset:
      ds_path: p01/global/b
      username: "{{ username }}"
      password: "{{ password }}"
      host: "{{ host }}"
      state: present
      atime: on
      quota: 2M
      # ub: true
      # exp: "{{ acls }}"
    register: testout2

  - name: output debug
    debug:
      msg: '{{ testout2 }}'

  - name: Create dataset p01/global/c
    dataset:
      ds_path: p01/global/c
      username: "{{ username }}"
      password: "{{ password }}"
      host: "{{ host }}"
      state: present
      atime: on
      quota: 5M
      refquota: 5M
      reservation: 3M
      refreservation: 3M
    register: testout3

  - name: Create multiple datasets @ p01/global
    dataset:
      ds_path: "p01/global/{{ item }}"
      username: "{{ username }}"
      password: "{{ password }}"
      host: "{{ host }}"
      state: present
      atime: on
      quota: 15M
      refquota: 15M
      reservation: 3M
      refreservation: 3M
    loop:
      - alpha
      - beta
      - gamma
      - delta
      - epsilon
      - zeta
      - eta
      - theta
      - iota
      - kappa
      - lambda
      - mu
      - nu
      - xi
      - omicron
      - pi
      - rho
      - sigma
      - tau
      - upsilon
      - phi
      - chi
      - psi
      - omega
    register: testout_alphabet_soup
